<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>vue3应知应会</title>
      <link href="/killzou.gitee.io/post/27f15615.html"/>
      <url>/killzou.gitee.io/post/27f15615.html</url>
      
        <content type="html"><![CDATA[<hr><hr><h2 id="vue3"><a href="#vue3" class="headerlink" title="vue3"></a>vue3</h2><h3 id="1-setup"><a href="#1-setup" class="headerlink" title="1.setup()"></a>1.setup()</h3><p>setup()代替之前vue2中的data()及其他，不用this。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//用法</span></span><br><span class="line"><span class="keyword">import</span> &#123;h&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line">  <span class="keyword">export</span> <span class="keyword">default</span>&#123;</span><br><span class="line">    <span class="title function_">setup</span>(<span class="params"></span>)&#123;</span><br><span class="line">      <span class="comment">//定义数据</span></span><br><span class="line">      <span class="keyword">let</span> name = <span class="string">&#x27;killzou&#x27;</span>;</span><br><span class="line">      <span class="keyword">let</span> age = <span class="number">18</span>;</span><br><span class="line">      <span class="comment">//定义方法</span></span><br><span class="line">      <span class="keyword">function</span> <span class="title function_">sayHello</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">`name<span class="subst">$&#123;name&#125;</span>,age<span class="subst">$&#123;age&#125;</span>`</span>)</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">//返回一个对象（必须返回，才能在页面中渲染）</span></span><br><span class="line">      <span class="comment">// return&#123;</span></span><br><span class="line">      <span class="comment">//   name,</span></span><br><span class="line">      <span class="comment">//   age,</span></span><br><span class="line">      <span class="comment">//   sayHello</span></span><br><span class="line">      <span class="comment">// &#125;</span></span><br><span class="line">      <span class="comment">//返回一个渲染函数</span></span><br><span class="line">      <span class="keyword">return</span> <span class="function">()=&gt;</span><span class="title function_">h</span>(<span class="string">&#x27;h1&#x27;</span>,<span class="string">&#x27;killzou&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>2.ref(响应式数据)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//需要引入ref,实现响应式</span></span><br><span class="line"><span class="keyword">import</span> &#123;h, ref&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line">  <span class="keyword">export</span> <span class="keyword">default</span>&#123;</span><br><span class="line">    <span class="title function_">setup</span>(<span class="params"></span>)&#123;</span><br><span class="line">      <span class="comment">//数据 (响应式数据 ref)</span></span><br><span class="line">      <span class="keyword">let</span> name = <span class="title function_">ref</span>(<span class="string">&#x27;killzou&#x27;</span>);</span><br><span class="line">      <span class="keyword">let</span> age = <span class="title function_">ref</span>(<span class="number">18</span>);</span><br><span class="line">      <span class="comment">//方法</span></span><br><span class="line">      <span class="keyword">function</span> <span class="title function_">changeInfo</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(name)</span><br><span class="line">        <span class="comment">//需要使用 属性.value 修改属性值</span></span><br><span class="line">         name.<span class="property">value</span> = <span class="string">&#x27;zouwenhao&#x27;</span>;</span><br><span class="line">         age.<span class="property">value</span> = <span class="number">28</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">//返回一个对象</span></span><br><span class="line">      <span class="keyword">return</span>&#123;</span><br><span class="line">        name,</span><br><span class="line">        age,</span><br><span class="line">        changeInfo</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">//返回一个渲染函数</span></span><br><span class="line">      <span class="comment">// return ()=&gt;h(&#x27;h1&#x27;,&#x27;killzou&#x27;)</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>3.reactive函数</p><p>定义<strong>对象类型</strong>的响应式函数。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入reactive</span></span><br><span class="line"><span class="keyword">import</span> &#123;h, reactive&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line">  <span class="keyword">export</span> <span class="keyword">default</span>&#123;</span><br><span class="line">    <span class="title function_">setup</span>(<span class="params"></span>)&#123;</span><br><span class="line">      <span class="comment">//使用reactive定义数据，对象及数组</span></span><br><span class="line">      <span class="keyword">let</span> person = <span class="title function_">reactive</span>(&#123;</span><br><span class="line">        name : <span class="string">&#x27;张三&#x27;</span>,</span><br><span class="line">        <span class="attr">age</span>:<span class="number">18</span>,</span><br><span class="line">        <span class="attr">hobby</span>:[<span class="string">&#x27;唱歌&#x27;</span>,<span class="string">&#x27;跳&#x27;</span>,<span class="string">&#x27;rap&#x27;</span>],</span><br><span class="line">        <span class="attr">type</span>:&#123;</span><br><span class="line">          <span class="attr">job</span>:<span class="string">&#x27;前端&#x27;</span>,</span><br><span class="line">          <span class="attr">salary</span>:<span class="number">10000</span>,</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">      <span class="comment">//定义修改数据的方法</span></span><br><span class="line">      <span class="keyword">function</span> <span class="title function_">changeInfo</span>(<span class="params"></span>)&#123;   </span><br><span class="line">         person.<span class="property">name</span> = <span class="string">&#x27;李四&#x27;</span>,</span><br><span class="line">         person.<span class="property">age</span> = <span class="number">28</span>,</span><br><span class="line">         person.<span class="property">hobby</span>[<span class="number">0</span>] = <span class="string">&#x27;游戏&#x27;</span>,</span><br><span class="line">         person.<span class="property">type</span>.<span class="property">job</span> = <span class="string">&#x27;中介&#x27;</span>,</span><br><span class="line">         person.<span class="property">type</span>.<span class="property">salary</span> = <span class="number">20000</span></span><br><span class="line">         <span class="variable language_">console</span>.<span class="title function_">log</span>(person)</span><br><span class="line">      &#125;;</span><br><span class="line">      <span class="comment">//返回数据</span></span><br><span class="line">      <span class="keyword">return</span> &#123;</span><br><span class="line">        person,</span><br><span class="line">        changeInfo</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h3 id="2-响应式原理"><a href="#2-响应式原理" class="headerlink" title="2.响应式原理"></a>2.响应式原理</h3><p>1.vue2.0中无法响应式的修改data中的数据，需要使用$set()或者vue.set()来实现响应式的修改。</p><p>2.直接通过修改数组下标，界面无法响应式更新，需要通过$set()或者vue.set()以及数组的api来实现响应式的修改。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> person = &#123;</span><br><span class="line">            <span class="attr">name</span>:<span class="string">&#x27;张三&#x27;</span>,</span><br><span class="line">            <span class="attr">age</span>:<span class="number">18</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//vue 2中响应式原理</span></span><br><span class="line">        <span class="keyword">let</span> p = &#123;&#125;</span><br><span class="line">        <span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(p,<span class="string">&#x27;name&#x27;</span>,&#123;</span><br><span class="line">            <span class="title function_">get</span>(<span class="params"></span>)&#123;</span><br><span class="line">                <span class="comment">//读取name属性时调用</span></span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;有人读取了name属性&#x27;</span>)</span><br><span class="line">                <span class="keyword">return</span> person.<span class="property">name</span>;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="title function_">set</span>(<span class="params">value</span>)&#123;</span><br><span class="line">                <span class="comment">//修改name属性时调用</span></span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;有人修改了name属性，我要去修改了&#x27;</span>)</span><br><span class="line">                <span class="keyword">return</span> person.<span class="property">name</span> = value</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br></pre></td></tr></table></figure><h4 id="vue3-0的响应式原理"><a href="#vue3-0的响应式原理" class="headerlink" title="vue3.0的响应式原理"></a>vue3.0的响应式原理</h4><p>proxy(代理)：l拦截对象中任意属性的变化，包括了熟悉的读写，属性的添加，属性的删除等。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> person = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;张三&quot;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">18</span>,</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="comment">//vue 3.0 中的响应式原理</span></span><br><span class="line">  <span class="comment">//s使用了proxy代理实现响应式原理</span></span><br><span class="line">  <span class="keyword">const</span> p = <span class="keyword">new</span> <span class="title class_">Proxy</span>(person, &#123;</span><br><span class="line">    <span class="title function_">get</span>(<span class="params">target, propName</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`有人读取了p的<span class="subst">$&#123;propName&#125;</span>属性`</span>);</span><br><span class="line">      <span class="keyword">return</span> target[propName];</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">set</span>(<span class="params">target, propName, value</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`有人修改了p的<span class="subst">$&#123;propName&#125;</span>属性`</span>);</span><br><span class="line">      <span class="keyword">return</span> (target[propName] = value);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">delete</span>(<span class="params">target, propName</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`有人删除了p的<span class="subst">$&#123;propName&#125;</span>属性`</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">delete</span> target[propName];</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure><p>Reflect(反射)：对被代理的对象属性进行操作。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> p = <span class="keyword">new</span> <span class="title class_">Proxy</span>(person, &#123;</span><br><span class="line">        <span class="title function_">get</span>(<span class="params">target, propName</span>) &#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`有人读取了p的<span class="subst">$&#123;propName&#125;</span>属性`</span>);</span><br><span class="line">          <span class="keyword">return</span> <span class="title class_">Reflect</span>.<span class="title function_">get</span>(target,propName) ;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="title function_">set</span>(<span class="params">target, propName, value</span>) &#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`有人修改了p的<span class="subst">$&#123;propName&#125;</span>属性`</span>);</span><br><span class="line">          <span class="keyword">return</span> <span class="title class_">Reflect</span>.<span class="title function_">set</span>(target,propName , value);</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="title function_">delete</span>(<span class="params">target, propName</span>) &#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`有人删除了p的<span class="subst">$&#123;propName&#125;</span>属性`</span>);</span><br><span class="line">          <span class="keyword">return</span> <span class="title class_">Reflect</span>.<span class="title function_">deleteProperty</span>(target,name) ;</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;);</span><br></pre></td></tr></table></figure><p>Reflect是为了操作对象而新增的api。（<a href="https://www.cnblogs.com/tugenhua0707/p/10291909.html%EF%BC%89">https://www.cnblogs.com/tugenhua0707/p/10291909.html）</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1</span></span><br><span class="line"><span class="title class_">Reflect</span>.<span class="title function_">get</span>(target, name, receiver);<span class="comment">//target: 目标对象 name: 是我们要读取的属性receiver(可选)： 可以理解为上下文this对象。</span></span><br><span class="line"><span class="keyword">const</span> obj = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;kongzhi&#x27;</span>,</span><br><span class="line">  <span class="attr">age</span>: <span class="number">30</span>,</span><br><span class="line">  <span class="keyword">get</span> <span class="title function_">xxx</span>() &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">name</span>); </span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;-------&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Reflect</span>.<span class="title function_">get</span>(obj, <span class="string">&#x27;name&#x27;</span>)); <span class="comment">// kongzhi </span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Reflect</span>.<span class="title function_">get</span>(obj, <span class="string">&#x27;yyy&#x27;</span>));  <span class="comment">// undefined</span></span><br><span class="line"><span class="comment">//2</span></span><br><span class="line"><span class="title class_">Reflect</span>.<span class="title function_">set</span>(target,name,value,receiver)<span class="comment">//target: 我们需要操作的对象。 name: 我们需要设置该对象的属性名。 value: 我们要设置的属性值。</span></span><br></pre></td></tr></table></figure><h4 id="3-ref和reactive的对比"><a href="#3-ref和reactive的对比" class="headerlink" title="3.ref和reactive的对比"></a>3.ref和reactive的对比</h4><p>1.定义数据角度对比：</p><p>ref：定义基本类型的数据。</p><p>reactive：定义对象（数组）类型的数据。</p><p>备注：ref也可以用来定义对象或者（数组）类型的数据，它内部会自动通过reactive转为代理对象。</p><p>2.原理角度对比：</p><p>ref通过Object.defineProperty()的get和set来实现响应式的（数据劫持）；</p><p>reactive通过Proxy来实现响应式（数据劫持），并通过Reflect操作源对象内部的数据。</p><p>3.使用角度对比：</p><p>ref定义的数据：操作数据需要 .value 读取数据时模板中直接读取不需要.value。</p><p>reactive 定义的数据：操作数据与读取数据：不需要.value。</p><h4 id="4-setup（）的注意点"><a href="#4-setup（）的注意点" class="headerlink" title="4.setup（）的注意点"></a>4.setup（）的注意点</h4><p>1.setup执行时机：</p><p>在beforecreate之前执行一次。this是undefined。</p><p>2.setup的参数</p><p>props：值为对象，包含：组件外部传递过来的。且组件内部声明接受了的属性。</p><p>context：上下文对象，</p><ol><li>attars:值为对象，包含：组件外部传递过来的但是没有在props配置中声明的属性，相当于vue2中的$attrs。</li><li>slots:收到的插槽内容，相当于this.slots。</li><li>emit:分发自定义时间的函数，相当于this.$emit.</li></ol><h3 id="3-computed-计算属性"><a href="#3-computed-计算属性" class="headerlink" title="3.computed(计算属性)"></a>3.computed(计算属性)</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//需要先引入computed</span></span><br><span class="line"><span class="keyword">import</span> &#123; reactive, computed &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&quot;Demo&quot;</span>,</span><br><span class="line">  <span class="title function_">setup</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> person = <span class="title function_">reactive</span>(&#123;</span><br><span class="line">      <span class="attr">firstName</span>: <span class="string">&quot;Kill&quot;</span>,</span><br><span class="line">      <span class="attr">lastName</span>: <span class="string">&quot;Zou&quot;</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">//计算属性简写（没有考虑计算属性被修改的情况）</span></span><br><span class="line">    <span class="comment">/* person.fullName = computed(()=&gt;&#123;</span></span><br><span class="line"><span class="comment">    //     return person.firstName + &quot;-&quot; + person.lastName;</span></span><br><span class="line"><span class="comment">    // &#125;)*/</span></span><br><span class="line">      </span><br><span class="line">   <span class="comment">//响应式的方式</span></span><br><span class="line">    person.<span class="property">fullName</span> = <span class="title function_">computed</span>(&#123;</span><br><span class="line">      <span class="title function_">get</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> person.<span class="property">firstName</span> + <span class="string">&quot;-&quot;</span> + person.<span class="property">lastName</span>;</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="title function_">set</span>(<span class="params">value</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(value);</span><br><span class="line">        <span class="keyword">let</span> nameArr = value.<span class="title function_">split</span>(<span class="string">&#x27;-&#x27;</span>);</span><br><span class="line">        person.<span class="property">firstName</span> = nameArr[<span class="number">0</span>];</span><br><span class="line">        person.<span class="property">lastName</span> = nameArr[<span class="number">1</span>];    </span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      person,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="4-watch（监听）"><a href="#4-watch（监听）" class="headerlink" title="4.watch（监听）"></a>4.watch（监听）</h3><p>坑：1.监听reactive定义的响应式数据时：oldval无法正确获取，强制开启了深度监听（deep配置失效）</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//需要引入watch</span></span><br><span class="line"><span class="keyword">import</span> &#123; ref, reactive, watch &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&quot;Demo&quot;</span>,</span><br><span class="line">  <span class="title function_">setup</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 1  监听单个数据ref数据</span></span><br><span class="line">    <span class="keyword">let</span> sum = <span class="title function_">ref</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">let</span> msg = <span class="title function_">ref</span>(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">    <span class="comment">// watch(sum,(newval,oldval)=&gt;&#123;</span></span><br><span class="line">    <span class="comment">//     console.log(&#x27;newval--&#x27;,newval,&#x27;oldval--&#x27;,oldval)</span></span><br><span class="line">    <span class="comment">// &#125;)</span></span><br><span class="line">    <span class="comment">//2.监听多个数据</span></span><br><span class="line">    <span class="title function_">watch</span>([sum, msg], <span class="function">(<span class="params">newval, oldval</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`当前数据变化了，&#x27;newval--&#x27;,<span class="subst">$&#123;newval&#125;</span>,&#x27;oldval--&#x27;,<span class="subst">$&#123;oldval&#125;</span>`</span>);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3.监听对象 无法获取到oldval</span></span><br><span class="line">    <span class="keyword">let</span> person = <span class="title function_">reactive</span>(&#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;kill&quot;</span>,</span><br><span class="line">      <span class="attr">age</span>: <span class="number">18</span>,</span><br><span class="line">      <span class="attr">job</span>:&#123;</span><br><span class="line">          <span class="attr">salary</span>:<span class="number">20</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">//无法获取到oldval</span></span><br><span class="line">    <span class="comment">// watch(person,(newval,oldval)=&gt;&#123;</span></span><br><span class="line">    <span class="comment">//     console.log(&#x27;newval--&#x27;,newval,&#x27;oldval--&#x27;,oldval)</span></span><br><span class="line">    <span class="comment">// &#125;)</span></span><br><span class="line">    <span class="comment">//4.监听对象中的某个属性</span></span><br><span class="line">    <span class="comment">// watch(()=&gt;person.age, (newval, oldval) =&gt; &#123;</span></span><br><span class="line">    <span class="comment">//   console.log(`当前数据变化了，&#x27;newval--&#x27;,$&#123;newval&#125;,&#x27;oldval--&#x27;,$&#123;oldval&#125;`);</span></span><br><span class="line">    <span class="comment">// &#125;);</span></span><br><span class="line">    <span class="comment">//5.监听对象中多个属性</span></span><br><span class="line">    <span class="comment">// watch([()=&gt;person.name,()=&gt;person.age],(newval,oldval)=&gt;&#123;</span></span><br><span class="line">    <span class="comment">//    console.log(`当前数据变化了，&#x27;newval--&#x27;,$&#123;newval&#125;,&#x27;oldval--&#x27;,$&#123;oldval&#125;`); </span></span><br><span class="line">    <span class="comment">// &#125;)</span></span><br><span class="line">    <span class="comment">//6.特殊情况 监听对象数据中的对象 &#123;deep:true&#125;深度监视 &#123;immediate:true&#125;一开始就监测</span></span><br><span class="line">    <span class="title function_">watch</span>(<span class="function">()=&gt;</span>person.<span class="property">job</span>.<span class="property">salary</span>,<span class="function">(<span class="params">newval,oldval</span>)=&gt;</span>&#123;</span><br><span class="line">         <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`当前数据变化了，&#x27;newval--&#x27;,<span class="subst">$&#123;newval&#125;</span>,&#x27;oldval--&#x27;,<span class="subst">$&#123;oldval&#125;</span>`</span>);</span><br><span class="line">    &#125;,&#123;<span class="attr">immediate</span>:<span class="literal">true</span>&#125;)</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      sum,</span><br><span class="line">      msg,</span><br><span class="line">      person,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="5-watchEffect函数"><a href="#5-watchEffect函数" class="headerlink" title="5.watchEffect函数"></a>5.watchEffect函数</h3><p>区别：</p><p>watch：需要指明监视的属性，也需要指明监视的回调。</p><p>watchEffect：不需要指明那个属性，监视回调中用到哪个属性，就监视哪个属性。</p><p>watchEffect类似computed：</p><p>但是computed注重的事计算出来的值（回调函数的返回值），所以必须要写返回值。</p><p>watchEffect注重过程（回调函数的函数体），所以不需要返回值。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; ref,watchEffect &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&quot;Demo&quot;</span>,</span><br><span class="line">  <span class="title function_">setup</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 1  监听单个数据ref数据</span></span><br><span class="line">    <span class="keyword">let</span> sum = <span class="title function_">ref</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="title function_">watchEffect</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">        <span class="keyword">const</span> x1 = sum.<span class="property">value</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`数据变化了`</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      sum,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="6-vue3生命周期"><a href="#6-vue3生命周期" class="headerlink" title="6.vue3生命周期"></a>6.vue3生命周期</h3><p>1.两种写法。在配置项写，跟vue2类似。第二种在组合式api中写</p><p>2.组件销毁的钩子名称改为BeforeUnmount和Unmounted。</p><p>3.组合式api中需要加上on，并且引入。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  //1.通过配置项展示生命周期 </span></span><br><span class="line"><span class="comment">  //vue3组件销毁的钩子改变名称</span></span><br><span class="line"><span class="comment">  beforeCreate()&#123;</span></span><br><span class="line"><span class="comment">    console.log(&#x27;---beforeCreate---&#x27;);</span></span><br><span class="line"><span class="comment">  &#125;,</span></span><br><span class="line"><span class="comment">  created()&#123;</span></span><br><span class="line"><span class="comment">    console.log(&#x27;---created---&#x27;);</span></span><br><span class="line"><span class="comment">  &#125;,</span></span><br><span class="line"><span class="comment">  beforeMount()&#123;</span></span><br><span class="line"><span class="comment">     console.log(&#x27;---beforeMount---&#x27;);</span></span><br><span class="line"><span class="comment">  &#125;,</span></span><br><span class="line"><span class="comment">  mounted()&#123;</span></span><br><span class="line"><span class="comment">    console.log(&#x27;---mounted---&#x27;);</span></span><br><span class="line"><span class="comment">  &#125;,</span></span><br><span class="line"><span class="comment">  beforeUpdate()&#123;</span></span><br><span class="line"><span class="comment">     console.log(&#x27;---beforeUpdate---&#x27;);</span></span><br><span class="line"><span class="comment">  &#125;,</span></span><br><span class="line"><span class="comment">  updated()&#123;</span></span><br><span class="line"><span class="comment">    console.log(&#x27;---updated---&#x27;);</span></span><br><span class="line"><span class="comment">  &#125;,</span></span><br><span class="line"><span class="comment">  beforeUnmount()&#123;</span></span><br><span class="line"><span class="comment">    console.log(&#x27;---beforeUnmount---&#x27;);</span></span><br><span class="line"><span class="comment">  &#125;,</span></span><br><span class="line"><span class="comment">  unmounted()&#123;</span></span><br><span class="line"><span class="comment">    console.log(&#x27;---unmountedt---&#x27;);</span></span><br><span class="line"><span class="comment">  &#125;,*/</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; ref, onBeforeMount,onMounted,onUpdated,onBeforeUpdate,onBeforeUnmount,onUnmounted &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="comment">//2.在组合式中使用生命周期钩子</span></span><br><span class="line"> <span class="title function_">setup</span>(<span class="params"></span>) &#123;</span><br><span class="line">   <span class="keyword">let</span> sum = <span class="title function_">ref</span>(<span class="number">0</span>)</span><br><span class="line">   <span class="title function_">onBeforeMount</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">     <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;---onBeforeMount---&#x27;</span>)</span><br><span class="line">   &#125;)</span><br><span class="line">   <span class="title function_">onMounted</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">     <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;---onMounted---&#x27;</span>)</span><br><span class="line">   &#125;)</span><br><span class="line">   <span class="title function_">onBeforeUpdate</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">     <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;---onBeforeUpdate---&#x27;</span>)</span><br><span class="line">   &#125;)</span><br><span class="line">   <span class="title function_">onUpdated</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">     <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;---onUpdated---&#x27;</span>)</span><br><span class="line">   &#125;)</span><br><span class="line">   <span class="title function_">onBeforeUnmount</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">     <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;---onBeforeUnmount---&#x27;</span>)</span><br><span class="line">   &#125;)</span><br><span class="line">   <span class="title function_">onUnmounted</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">     <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;---onUnmounted---&#x27;</span>)</span><br><span class="line">   &#125;)</span><br><span class="line">   <span class="keyword">return</span> &#123;</span><br><span class="line">     sum,</span><br><span class="line">   &#125;;</span><br><span class="line"> &#125;,</span><br></pre></td></tr></table></figure><h3 id="7-hook函数"><a href="#7-hook函数" class="headerlink" title="7.hook函数"></a>7.hook函数</h3><p>什么是hook？—-本质是一个函数，将setup函数中使用的组合式api进行了封装。</p><p>类似vue2中的mixin</p><p>优势：复用代码，让setup中的逻辑更清楚易懂</p><p>使用方法：1.建立hook文件夹，将方法建立一个文件</p><p>​   2.在组件中引入，使用时用变量接。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// hook下的hook文件</span></span><br><span class="line"><span class="keyword">import</span> &#123; reactive, onBeforeMount, onMounted &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> <span class="title function_">usePoint</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="comment">//实现鼠标打点的数据</span></span><br><span class="line">  <span class="keyword">let</span> point = <span class="title function_">reactive</span>(&#123;</span><br><span class="line">    <span class="attr">x</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">y</span>: <span class="number">0</span>,</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="comment">//实现鼠标打点的方法</span></span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">savePonit</span>(<span class="params">event</span>)&#123;</span><br><span class="line">    point.<span class="property">x</span> = event.<span class="property">pageX</span>;</span><br><span class="line">      point.<span class="property">y</span> = event.<span class="property">pageY</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//实现鼠标打点相关生命周期钩子方法</span></span><br><span class="line">  <span class="title function_">onMounted</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>, savePonit)&#125;);</span><br><span class="line">  <span class="title function_">onBeforeMount</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">window</span>.<span class="title function_">removeEventListener</span>(<span class="string">&quot;click&quot;</span>, savePonit)&#125;)</span><br><span class="line">  <span class="keyword">return</span> point</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//组件中使用</span></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>单前的数字为&#123;&#123; sum &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;sum++&quot;</span>&gt;</span>点我加1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>获取当前坐标X:&#123;&#123; point.x &#125;&#125;y:&#123;&#123; point.y &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> &#123; ref, reactive, onBeforeMount, onMounted &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="comment">//需要先引用hook</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span>  usePoint <span class="keyword">from</span> <span class="string">&#x27;../hook/usePoint.js&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">name</span>: <span class="string">&quot;Demo&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">setup</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">let</span> sum = <span class="title function_">ref</span>(<span class="number">0</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">//需要用变量来接</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">let</span> point = <span class="title function_">usePoint</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      sum,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      point,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="8-toRef"><a href="#8-toRef" class="headerlink" title="8.toRef"></a>8.toRef</h3><p>作用：创建一个ref对象，他的value值指向另一个对象中的属性。</p><p>语法：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> name = <span class="title function_">toRef</span>(person,<span class="string">&#x27;name&#x27;</span>);<span class="comment">//toRef(对象，‘属性名’)</span></span><br></pre></td></tr></table></figure><p>应用：要将响应式对象中的某个属性单独的提供给外部使用。</p><p>扩展：toRefs和toRef功能一样，但是可以批量创建多个ref对象，语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">toRefs(person)//toRefs(对象名)</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.toRef的使用</span></span><br><span class="line"><span class="keyword">import</span> &#123;  reactive,toRef &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&quot;Demo&quot;</span>,</span><br><span class="line">  <span class="title function_">setup</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> person = <span class="title function_">reactive</span>(&#123;</span><br><span class="line">        name : <span class="string">&#x27;killzou&#x27;</span>,</span><br><span class="line">        age : <span class="number">18</span>,</span><br><span class="line">        <span class="attr">job</span>:&#123;</span><br><span class="line">          <span class="attr">j1</span>:&#123;</span><br><span class="line">            <span class="attr">salary</span>:<span class="number">18</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">     <span class="comment">//to ref </span></span><br><span class="line">      <span class="attr">name</span>:<span class="title function_">toRef</span>(person,<span class="string">&#x27;name&#x27;</span>),</span><br><span class="line">      <span class="attr">age</span>:<span class="title function_">toRef</span>(person,<span class="string">&#x27;age&#x27;</span>),</span><br><span class="line">      <span class="attr">salary</span>:<span class="title function_">toRef</span>(person.<span class="property">job</span>.<span class="property">j1</span>,<span class="string">&#x27;salary&#x27;</span>)</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//2.toRefs的使用</span></span><br><span class="line"><span class="comment">//引入toRefs</span></span><br><span class="line"><span class="keyword">import</span> &#123;  reactive,toRefs &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&quot;Demo&quot;</span>,</span><br><span class="line">  <span class="title function_">setup</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> person = <span class="title function_">reactive</span>(&#123;</span><br><span class="line">        name : <span class="string">&#x27;killzou&#x27;</span>,</span><br><span class="line">        age : <span class="number">18</span>,</span><br><span class="line">        <span class="attr">job</span>:&#123;</span><br><span class="line">          <span class="attr">j1</span>:&#123;</span><br><span class="line">            <span class="attr">salary</span>:<span class="number">18</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="comment">//打散</span></span><br><span class="line">     ...<span class="title function_">toRefs</span>(person)</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="其他的Composition-API"><a href="#其他的Composition-API" class="headerlink" title="其他的Composition API"></a>其他的Composition API</h2><h4 id="1-shalldowReactive-和shallowRef"><a href="#1-shalldowReactive-和shallowRef" class="headerlink" title="1.shalldowReactive 和shallowRef"></a>1.shalldowReactive 和shallowRef</h4><p>shallowReactive：只处理对象最外层的响应式（浅响应式）</p><p>shallowRef：只处理基本数据的响应式，不进行对象的响应式处理。</p><p>什么时候使用？</p><p>​如果一个数据对象，结构比较深，但变化只是外层属性变化&#x3D;&#x3D;&#x3D;&gt;shallowReactive。</p><p>​如果一个对象数据，后续功能不会修改对象中的属性，而是生新的对像来替换&#x3D;&#x3D;&#x3D;&gt;shallowRef。</p><p>语法：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> x = <span class="title function_">shallowRef</span>(&#123;<span class="attr">x</span>:<span class="number">0</span>&#125;)</span><br><span class="line"><span class="keyword">let</span> person = <span class="title function_">shallowReactive</span>(&#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&#x27;zs&#x27;</span>,</span><br><span class="line">    <span class="attr">age</span>:<span class="number">18</span>,</span><br><span class="line">    <span class="attr">job</span>:&#123;</span><br><span class="line">        <span class="attr">j1</span>:&#123;</span><br><span class="line">            <span class="attr">salary</span>:<span class="number">2000</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="2-readonly和shallowReadonly"><a href="#2-readonly和shallowReadonly" class="headerlink" title="2.readonly和shallowReadonly"></a>2.readonly和shallowReadonly</h4><p>readonly:让一个响应式的数据变为只读的（深只读）。</p><p>shallowReadonly:让一个响应式数据变为只读（浅只读）。</p><p>应用场景：不希望数据被修改时。</p><p>语法：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">person = <span class="title function_">readonly</span>(person)</span><br><span class="line">person = <span class="title function_">shallwReadonly</span>(person)</span><br></pre></td></tr></table></figure><h4 id="3-toRaw和markRaw"><a href="#3-toRaw和markRaw" class="headerlink" title="3.toRaw和markRaw"></a>3.toRaw和markRaw</h4><p>toRaw:</p><p>作用：将一个有reactive生成的响应式对象转为普通对象</p><p>使用场景：用于读取响应式对象对应的普通对象，对这个普通对象的所有操作，不会引起页面更新。</p><p>markRaw:</p><p>作用：标记一个对象，使其永远不会再成为响应式对象。</p><p>应用场景：1.有些值不应该被设置为响应式的，例如复杂的第三方类库等。</p><p>​   2.当渲染具有不可变数据的大列表时，跳过响应式转换可以提高性能。</p><h4 id="4-customRef"><a href="#4-customRef" class="headerlink" title="4.customRef"></a>4.customRef</h4><p>作用：创建一个自定义的ref，并且对其依赖项跟踪和更新触发显示控制。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;keyWord&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; keyWord &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="comment">//自定义ref 通过customRef实现自定义</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> &#123; customRef &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">name</span>: <span class="string">&quot;Demo&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">setup</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">let</span> keyWord = <span class="title function_">myRef</span>(<span class="string">&quot;hello&quot;</span>, <span class="number">1000</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">//自定义ref</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">function</span> <span class="title function_">myRef</span>(<span class="params">value, dely</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">let</span> timer;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">return</span> <span class="title function_">customRef</span>(<span class="function">(<span class="params">track, trigger</span>) =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="title function_">get</span>(<span class="params"></span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`读取了数据<span class="subst">$&#123;value&#125;</span>`</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="title function_">track</span>();<span class="comment">//通知vue追踪value的变化（提前和get商量)</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">return</span> value;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          <span class="title function_">set</span>(<span class="params">newval</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">console</span>.<span class="title function_">log</span>(newval);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="built_in">clearTimeout</span>(timer);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              value = newval;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">              <span class="title function_">trigger</span>();<span class="comment">//通知vue去重新解析模板</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;, dely);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">          &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      keyWord,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> web前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
